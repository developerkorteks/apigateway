// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/anime-detail": {
            "get": {
                "description": "Retrieve detailed information about a specific anime from all available APIs. Requires anime identifier (id, slug, or anime_slug). Uses fallback mechanism when primary APIs fail.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Detail"
                ],
                "summary": "Get anime details from multiple sources with fallback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Anime ID (alternative to slug/anime_slug)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Anime slug (alternative to id/anime_slug)",
                        "name": "slug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Anime slug (alternative to id/slug)",
                        "name": "anime_slug",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Internal parameter for source selection",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated anime details from available sources",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required anime identifier",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found - anime not found in any source",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/anime-terbaru": {
            "get": {
                "description": "Retrieve aggregated latest anime releases from all available APIs with automatic fallback mechanism",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "Get latest anime from multiple sources",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Used for internal source selection only",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated latest anime list from multiple sources with metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/episode-detail": {
            "get": {
                "description": "Retrieve detailed information about a specific episode from all available APIs. Requires episode identifier (id, episode_url, or episode_slug). Uses automatic fallback mechanism.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Detail"
                ],
                "summary": "Get episode details from multiple sources with fallback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Episode ID (alternative to episode_url/episode_slug)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Episode URL (alternative to id/episode_slug)",
                        "name": "episode_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Episode slug (alternative to id/episode_url)",
                        "name": "episode_slug",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Internal routing parameter",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated episode details from available sources",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required episode identifier",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found - episode not found in any source",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/home": {
            "get": {
                "description": "Retrieve aggregated home page content from multiple anime APIs with fallback mechanism. The system automatically calls all available primary APIs and aggregates the results.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "Get home page content from multiple anime sources",
                "parameters": [
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Used internally for API source selection, not forwarded to external APIs",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated home page content with sources info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid category",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/jadwal-rilis": {
            "get": {
                "description": "Retrieve aggregated anime release schedule for all days from multiple APIs with automatic fallback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "Get anime release schedule from multiple sources",
                "parameters": [
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Internal parameter, not sent to external APIs",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated anime release schedule with sources info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid category",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/jadwal-rilis/{day}": {
            "get": {
                "description": "Retrieve aggregated anime release schedule for a specific day from multiple APIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "Get anime release schedule by day from multiple sources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Day of the week (senin, selasa, rabu, kamis, jumat, sabtu, minggu)",
                        "name": "day",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Internal parameter for source selection",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated anime release schedule for the day with sources info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid day or category",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/movie": {
            "get": {
                "description": "Retrieve aggregated anime movie listings from all available APIs with fallback mechanism",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movie"
                ],
                "summary": "Get anime movies from multiple sources",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Internal routing parameter",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated anime movie list from multiple sources",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/search": {
            "get": {
                "description": "Search for anime by query string across all available APIs. Aggregates search results from multiple sources with automatic fallback mechanism.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search anime from multiple sources with fallback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query string - title, genre, or keyword to search for",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "anime",
                            "korean-drama",
                            "all"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Content category for API routing (anime, korean-drama, all). Internal routing parameter",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated search results from multiple sources with metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or empty search query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found - no results found in any source",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - all API sources failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "description": "Anime related endpoints",
            "name": "Anime"
        },
        {
            "description": "Movie related endpoints",
            "name": "Movie"
        },
        {
            "description": "Search functionality",
            "name": "Search"
        },
        {
            "description": "Health check endpoints",
            "name": "Health"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "API Fallback Service",
	Description:      "A robust API fallback service for anime content with automatic failover capabilities",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
