services:
  apifallback:
    image: apifallback:latest
    container_name: apifallback
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      PORT: ${PORT:-8080}
      DATABASE_PATH: /app/data/data.db
      REDIS_ADDR: ${REDIS_ADDR:-redis:6379}
      REDIS_DB: ${REDIS_DB:-0}
      API_TIMEOUT: ${API_TIMEOUT:-20s}
      MAX_CONCURRENCY: ${MAX_CONCURRENCY:-10}
      RATE_LIMIT: ${RATE_LIMIT:-100}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-1m}
      HEALTH_CHECK_INTERVAL: ${HEALTH_CHECK_INTERVAL:-10m}
      GIN_MODE: ${GIN_MODE:-release}
      # Dynamic API Sources Configuration
      # Method 1: JSON Configuration (Recommended for many sources)
      # API_SOURCES_JSON: ${API_SOURCES_JSON:-}
      
      # Method 2: Individual API Source Variables (Easy to manage)
      API_SOURCE_GOMUNIME_URL: ${API_SOURCE_GOMUNIME_URL:-http://localhost:8001}
      API_SOURCE_WINBUTV_URL: ${API_SOURCE_WINBUTV_URL:-http://localhost:8002}
      API_SOURCE_SAMEHADAKU_URL: ${API_SOURCE_SAMEHADAKU_URL:-http://128.199.109.211:8182}
      API_SOURCE_MULTIPLESCRAPE_URL: ${API_SOURCE_MULTIPLESCRAPE_URL:-http://multiplescrape:8081}
      API_SOURCE_OTAKUDESU_URL: ${API_SOURCE_OTAKUDESU_URL:-https://otakudesu.quest}
      API_SOURCE_KUSONIME_URL: ${API_SOURCE_KUSONIME_URL:-https://kusonime.com}
      
      # Add more sources as needed:
      # API_SOURCE_DRAKORINDO_URL: ${API_SOURCE_DRAKORINDO_URL:-}
      # API_SOURCE_FILMAPIK_URL: ${API_SOURCE_FILMAPIK_URL:-}
      # API_SOURCE_DONGHUA_WORLD_URL: ${API_SOURCE_DONGHUA_WORLD_URL:-}
      
      # Method 3: Legacy Support (Backward compatibility)
      GOMUNIME_URL: ${GOMUNIME_URL:-http://localhost:8001}
      WINBUTV_URL: ${WINBUTV_URL:-http://localhost:8002}
      SAMEHADAKU_URL: ${SAMEHADAKU_URL:-http://128.199.109.211:8182}
      MULTIPLESCRAPE_URL: ${MULTIPLESCRAPE_URL:-http://multiplescrape:8081}
      OTAKUDESU_URL: ${OTAKUDESU_URL:-https://otakudesu.quest}
      KUSONIME_URL: ${KUSONIME_URL:-https://kusonime.com}
    volumes:
      - apifallback_data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - apifallback_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "casaos.name=API Fallback"
      - "casaos.description=API Category with Fallback Service"
      - "casaos.icon=https://cdn-icons-png.flaticon.com/512/2103/2103633.png"
      - "casaos.port=8080"
      - "casaos.scheme=http"

  redis:
    image: valkey/valkey:7-alpine
    container_name: apifallback_redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - apifallback_network
    command: valkey-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  apifallback_data:
    driver: local
  redis_data:
    driver: local

networks:
  apifallback_network:
    driver: bridge